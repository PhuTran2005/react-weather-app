import React, { useEffect, useState } from "react";
import {
  Cloud,
  Sun,
  CloudRain,
  Wind,
  Thermometer,
  Eye,
  Droplets,
  Navigation,
  MapPin,
  Calendar,
  TrendingUp,
  Bell,
  Settings,
  ChevronRight,
  Zap,
  Globe,
  Smartphone,
  Star,
  Shield,
  Award,
  Users,
} from "lucide-react";
import "./Home.scss";
import { useNavigate } from "react-router-dom";
const Home = () => {
  const [currentTime, setCurrentTime] = useState(new Date());
  const [hoveredFeature, setHoveredFeature] = useState(null);
  const navigate = useNavigate();
  useEffect(() => {
    const timer = setInterval(() => {
      setCurrentTime(new Date());
    }, 1000);

    return () => {
      clearInterval(timer);
    };
  }, []);

  const features = [
    {
      id: "current-weather",
      title: "Th·ªùi Ti·∫øt Hi·ªán T·∫°i",
      description:
        "Xem th√¥ng tin th·ªùi ti·∫øt chi ti·∫øt t·∫°i v·ªã tr√≠ c·ªßa b·∫°n v·ªõi ƒë·ªô ch√≠nh x√°c cao",
      icon: Sun,
      path: "/weather-app",
      gradient: "linear-gradient(135deg, #ffecd2 0%, #fcb69f 100%)",
      iconColor: "#ff7b3d",
    },
    {
      id: "forecast",
      title: "D·ª± B√°o 7 Ng√†y",
      description:
        "Theo d√µi xu h∆∞·ªõng th·ªùi ti·∫øt trong tu·∫ßn t·ªõi v·ªõi bi·ªÉu ƒë·ªì tr·ª±c quan",
      icon: Calendar,
      path: "/weather-app",
      gradient: "linear-gradient(135deg, #a8edea 0%, #fed6e3 100%)",
      iconColor: "#667eea",
    },
    {
      id: "radar",
      title: "B·∫£n ƒê·ªì Th·ªùi Ti·∫øt",
      description: "Xem b·∫£n ƒë·ªì radar m∆∞a v√† m√¢y tr·ª±c ti·∫øp v·ªõi c√¥ng ngh·ªá AI",
      icon: Globe,
      path: "/weather-app",
      gradient: "linear-gradient(135deg, #d299c2 0%, #fef9d7 100%)",
      iconColor: "#764ba2",
    },
    {
      id: "alerts",
      title: "C·∫£nh B√°o Th·ªùi Ti·∫øt",
      description:
        "Nh·∫≠n th√¥ng b√°o v·ªÅ c√°c hi·ªán t∆∞·ª£ng th·ªùi ti·∫øt c·ª±c ƒëoan k·ªãp th·ªùi",
      icon: Bell,
      path: "/weather-app",
      gradient: "linear-gradient(135deg, #89f7fe 0%, #66a6ff 100%)",
      iconColor: "#667eea",
    },
    {
      id: "locations",
      title: "Nhi·ªÅu ƒê·ªãa ƒêi·ªÉm",
      description:
        "Theo d√µi th·ªùi ti·∫øt ·ªü nhi·ªÅu th√†nh ph·ªë kh√°c nhau tr√™n to√†n th·∫ø gi·ªõi",
      icon: MapPin,
      path: "/weather-app",
      gradient: "linear-gradient(135deg, #fa709a 0%, #fee140 100%)",
      iconColor: "#red",
    },
    {
      id: "analytics",
      title: "Th·ªëng K√™ & Xu H∆∞·ªõng",
      description: "Ph√¢n t√≠ch d·ªØ li·ªáu th·ªùi ti·∫øt theo th·ªùi gian v·ªõi AI insights",
      icon: TrendingUp,
      path: "/weather-app",
      gradient: "linear-gradient(135deg, #fdfbfb 0%, #ebedee 100%)",
      iconColor: "#667eea",
    },
  ];

  const stats = [
    { label: "Th√†nh ph·ªë", value: "500+", icon: MapPin, color: "#667eea" },
    { label: "ƒê·ªô ch√≠nh x√°c", value: "98%", icon: Award, color: "#fa709a" },
    { label: "C·∫≠p nh·∫≠t", value: "5 ph√∫t", icon: Zap, color: "#4ecdc4" },
    { label: "Ng∆∞·ªùi d√πng", value: "1M+", icon: Users, color: "#45b7d1" },
  ];

  const testimonials = [
    {
      name: "Tr·∫ßn VƒÉn Ph√∫",
      role: "N√¥ng d√¢n",
      content:
        "·ª®ng d·ª•ng gi√∫p t√¥i d·ª± b√°o th·ªùi ti·∫øt ch√≠nh x√°c, r·∫•t h·ªØu √≠ch cho vi·ªác canh t√°c.",
      rating: 5,
      avatar: "üë®‚Äçüåæ",
    },
    {
      name: "Tr·∫ßn Ng·ªçc Ho√†i",
      role: "Du l·ªãch vi√™n",
      content:
        "Giao di·ªán ƒë·∫πp, th√¥ng tin chi ti·∫øt. Kh√¥ng th·ªÉ thi·∫øu khi ƒëi du l·ªãch!",
      rating: 5,
      avatar: "‚úàÔ∏è",
    },
    {
      name: "Tr·∫ßn Th·ªã Ng·ªçc Qu√Ω",
      role: "Th·ªßy th·ªß",
      content:
        "C·∫£nh b√°o th·ªùi ti·∫øt c·ª±c ƒëoan r·∫•t k·ªãp th·ªùi, gi√∫p t√¥i tr√°nh ƒë∆∞·ª£c nhi·ªÅu r·ªßi ro.",
      rating: 5,
      avatar: "‚öì",
    },
  ];

  return (
    <div className="home-container">
      {/* Animated Background */}
      <div className="animated-bg" />

      {/* Floating Weather Icons */}
      <div className="floating-elements">
        {[Sun, Cloud, CloudRain, Wind].map((Icon, index) => (
          <div key={index} className="floating-icon">
            <Icon size={24} style={{ color: "rgba(255,255,255,0.1)" }} />
          </div>
        ))}
      </div>

      {/* Header */}
      <header className="header">
        <div className="header-content">
          <div className="logo">
            <div className="logo-icon">
              <Cloud size={28} color="white" />
            </div>
            <div className="logo-text">
              <h1 className="logo-title">WeatherPro</h1>
              <p className="logo-subtitle">Th·ªùi ti·∫øt th√¥ng minh</p>
            </div>
          </div>

          <div className="header-right">
            <div className="time-display">
              <p className="time">{currentTime.toLocaleTimeString("vi-VN")}</p>
              <p className="date">{currentTime.toLocaleDateString("vi-VN")}</p>
            </div>
            <button className="settings-btn">
              <Settings size={20} />
            </button>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section className="hero fade-in-up">
        <div className="hero-content">
          <div className="hero-icon">
            <Cloud size={60} color="white" />
          </div>

          <h1 className="hero-title">
            Weather<span className="hero-title-accent">Pro</span>
          </h1>

          <p className="hero-description">
            ·ª®ng d·ª•ng th·ªùi ti·∫øt th√¥ng minh v·ªõi AI, d·ª± b√°o ch√≠nh x√°c 98%, giao
            di·ªán ƒë·∫πp m·∫Øt v√† tr·∫£i nghi·ªám ng∆∞·ªùi d√πng tuy·ªát v·ªùi
          </p>

          <div className="hero-buttons">
            <button
              onClick={() => navigate("./weather-app")}
              className="primary-btn"
            >
              <Sun size={20} />
              <span>Kh√°m Ph√° Ngay</span>
              <ChevronRight size={20} />
            </button>
            <button className="secondary-btn">Xem Demo</button>
          </div>
        </div>
      </section>

      {/* Stats Section */}
      <section className="stats-section">
        <div className="stats-grid">
          {stats.map((stat, index) => (
            <div key={index} className="stat-card">
              <div
                className="stat-icon"
                style={{ backgroundColor: stat.color }}
              >
                <stat.icon size={24} color="white" />
              </div>
              <div className="stat-value">{stat.value}</div>
              <div className="stat-label">{stat.label}</div>
            </div>
          ))}
        </div>
      </section>

      {/* Features Section */}
      <section className="features-section">
        <div className="section-header">
          <h2 className="section-title">T√≠nh NƒÉng N·ªïi B·∫≠t</h2>
          <p className="section-description">
            Kh√°m ph√° c√°c t√≠nh nƒÉng m·∫°nh m·∫Ω ƒë∆∞·ª£c t√≠ch h·ª£p AI v√† machine learning
          </p>
        </div>

        <div className="features-grid">
          {features.map((feature) => (
            <div
              key={feature.id}
              className="feature-card"
              style={{ background: feature.gradient }}
              onMouseEnter={() => setHoveredFeature(feature.id)}
              onMouseLeave={() => setHoveredFeature(null)}
            >
              <div
                className="feature-icon"
                style={{ color: feature.iconColor }}
              >
                <feature.icon size={32} />
              </div>

              <h3 className="feature-title">{feature.title}</h3>
              <p className="feature-description">{feature.description}</p>

              <div className="feature-link">
                <a href={feature.path}>Kh√°m ph√° ngay</a>
                <ChevronRight
                  size={16}
                  style={{
                    transform:
                      hoveredFeature === feature.id
                        ? "translateX(5px)"
                        : "translateX(0)",
                    transition: "transform 0.3s ease",
                  }}
                />
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* Testimonials Section */}
      <section className="testimonials-section">
        <div className="section-header">
          <h2 className="section-title">Ng∆∞·ªùi D√πng N√≥i G√¨</h2>
          <p className="section-description">
            H∆°n 1 tri·ªáu ng∆∞·ªùi d√πng tin t∆∞·ªüng WeatherPro
          </p>
        </div>

        <div className="testimonials-grid">
          {testimonials.map((testimonial, index) => (
            <div key={index} className="testimonial-card">
              <div className="testimonial-stars">
                {[...Array(testimonial.rating)].map((_, i) => (
                  <Star
                    key={i}
                    size={16}
                    style={{ color: "#ffd700", fill: "#ffd700" }}
                  />
                ))}
              </div>

              <p className="testimonial-content">"{testimonial.content}"</p>

              <div className="testimonial-author">
                <span className="testimonial-avatar">{testimonial.avatar}</span>
                <div>
                  <div className="testimonial-name">{testimonial.name}</div>
                  <div className="testimonial-role">{testimonial.role}</div>
                </div>
              </div>
            </div>
          ))}
        </div>
      </section>

      {/* CTA Section */}
      <section className="cta-section">
        <div className="cta-content">
          <h2 className="cta-title">
            S·∫µn s√†ng tr·∫£i nghi·ªám th·ªùi ti·∫øt th√¥ng minh?
          </h2>
          <p className="cta-description">
            Tham gia c√πng h√†ng tri·ªáu ng∆∞·ªùi d√πng ƒëang tin t∆∞·ªüng WeatherPro
          </p>

          <div className="cta-buttons">
            <button className="cta-primary-btn">
              <Thermometer size={20} />
              <span>B·∫Øt ƒê·∫ßu Mi·ªÖn Ph√≠</span>
            </button>
            <button className="cta-secondary-btn">T·∫£i ·ª®ng D·ª•ng</button>
          </div>
        </div>
      </section>

      {/* Footer */}
      <footer className="footer">
        <div className="footer-content">
          <div className="footer-logo">
            <div className="footer-logo-icon">
              <Cloud size={24} color="white" />
            </div>
            <div>
              <h3 className="footer-logo-text">WeatherPro</h3>
              <p className="footer-logo-subtext">Th·ªùi ti·∫øt th√¥ng minh</p>
            </div>
          </div>

          <div className="footer-copyright">
            ¬© 2025 WeatherPro. T·∫•t c·∫£ quy·ªÅn ƒë∆∞·ª£c b·∫£o l∆∞u.
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Home;
